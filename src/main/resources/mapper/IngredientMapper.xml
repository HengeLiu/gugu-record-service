<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nutrition.nutritionservice.dao.IngredientDao">
    <resultMap id="BaseResultMap" type="com.nutrition.nutritionservice.vo.IngredientVo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="code" jdbcType="INTEGER" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="calorie" jdbcType="INTEGER" property="calorie"/>
        <result column="category_code" jdbcType="TINYINT" property="categoryCode"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="nicknames" jdbcType="VARCHAR" property="nicknames"/>
        <result column="specifications" jdbcType="VARCHAR" property="specifications"/>
        <result column="ingredient_type" jdbcType="VARCHAR" property="ingredientType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, code, `name`, calorie, category_code, category_name, nicknames, specifications, 
    ingredient_type, create_time, update_time
  </sql>
    <select id="selectByCode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ingredient
        where code = #{code}
    </select>
    <select id="selectByCategoryCode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ingredient
        where category_code = #{categoryCode}
    </select>
    <select id="selectByCodeList" resultType="com.nutrition.nutritionservice.vo.IngredientVo">
        select
        <include refid="Base_Column_List"/>
        from ingredient
        where code in
        (
        <foreach collection="codeList" item="code" index="index" separator=",">
            #{code}
        </foreach>
        )
    </select>
    <select id="selectAvailable" resultType="com.nutrition.nutritionservice.vo.IngredientVo">
        select
        <include refid="Base_Column_List"/>
        from ingredient
        where available = 1
    </select>
    <delete id="deleteByCode" parameterType="java.lang.String">
    delete from ingredient
    where code = #{code}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.nutrition.nutritionservice.vo.IngredientVo"
            useGeneratedKeys="true">
    insert into ingredient (code, `name`, calorie, 
      category_code, category_name, nicknames, 
      specifications, ingredient_type)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{calorie,jdbcType=INTEGER}, 
      #{categoryCode,jdbcType=TINYINT}, #{categoryName,jdbcType=VARCHAR}, #{nicknames,jdbcType=VARCHAR}, 
      #{specifications,jdbcType=VARCHAR}, #{ingredientType,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.nutrition.nutritionservice.vo.IngredientVo" useGeneratedKeys="true">
        insert into ingredient
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="calorie != null">
                calorie,
            </if>
            <if test="categoryCode != null">
                category_code,
            </if>
            <if test="categoryName != null">
                category_name,
            </if>
            <if test="nicknames != null">
                nicknames,
            </if>
            <if test="specifications != null">
                specifications,
            </if>
            <if test="ingredientType != null">
                ingredient_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="calorie != null">
                #{calorie,jdbcType=INTEGER},
            </if>
            <if test="categoryCode != null">
                #{categoryCode,jdbcType=TINYINT},
            </if>
            <if test="categoryName != null">
                #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="nicknames != null">
                #{nicknames,jdbcType=VARCHAR},
            </if>
            <if test="specifications != null">
                #{specifications,jdbcType=VARCHAR},
            </if>
            <if test="ingredientType != null">
                #{ingredientType,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByCodeSelective" parameterType="com.nutrition.nutritionservice.vo.IngredientVo">
        update ingredient
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="calorie != null">
                calorie = #{calorie,jdbcType=INTEGER},
            </if>
            <if test="categoryCode != null">
                category_code = #{categoryCode,jdbcType=TINYINT},
            </if>
            <if test="categoryName != null">
                category_name = #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="nicknames != null">
                nicknames = #{nicknames,jdbcType=VARCHAR},
            </if>
            <if test="specifications != null">
                specifications = #{specifications,jdbcType=VARCHAR},
            </if>
            <if test="ingredientType != null">
                ingredient_type = #{ingredientType,jdbcType=VARCHAR},
            </if>
        </set>
        where code = #{code}
    </update>
    <update id="updateByCode" parameterType="com.nutrition.nutritionservice.vo.IngredientVo">
    update ingredient
    set `name` = #{name,jdbcType=VARCHAR},
      calorie = #{calorie,jdbcType=INTEGER},
      category_code = #{categoryCode,jdbcType=TINYINT},
      category_name = #{categoryName,jdbcType=VARCHAR},
      nicknames = #{nicknames,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      ingredient_type = #{ingredientType,jdbcType=VARCHAR},
    where code = #{code}
  </update>
</mapper>